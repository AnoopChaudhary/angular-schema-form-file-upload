angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/fileUpload/file-upload.html",'<div class="form-group" ng-class="{\'has-error\': hasError()}"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><div><input ng-model="$$value$$" type="file" on-read-file=""> <span ng-show="$$value$$" class="title">{{ $$value$$ }}</span></div><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,r,o){var a=function(r,a,t){if("string"===a.type&&"file"===a.format){var l=e.stdFormObj(r,a,t);return l.key=t.path,l.type="fileUpload",t.lookup[o.stringify(t.path)]=l,l}};e.defaults.string.unshift(a),r.addMapping("bootstrapDecorator","fileUpload","directives/decorators/bootstrap/fileUpload/file-upload.html"),r.createDirective("fileUpload","directives/decorators/bootstrap/fileUpload/file-upload.html")}]),angular.module("schemaForm").directive("onReadFile",function(e){return{restrict:"A",require:["ngModel"],scope:!1,link:function(e,r,o,a){r.on("change",function(e){var r=new FileReader;r.onload=function(e){a[0].$setViewValue(e.target.result)},r.readAsText((e.srcElement||e.target).files[0])})}}});